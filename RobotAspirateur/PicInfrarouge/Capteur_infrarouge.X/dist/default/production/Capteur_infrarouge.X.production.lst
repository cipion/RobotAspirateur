

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jun 16 18:53:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0006                     _PORTB	set	6
   168  001A                     _RCREG	set	26
   169  0019                     _TXREG	set	25
   170  0065                     _RCIF	set	101
   171  00C4                     _CREN	set	196
   172  00C7                     _SPEN	set	199
   173  0086                     _TRISB	set	134
   174  0099                     _SPBRG	set	153
   175  040F                     _nRBPU	set	1039
   176  04C1                     _TRMT	set	1217
   177  04C5                     _TXEN	set	1221
   178  043E                     _TRISC6	set	1086
   179  043F                     _TRISC7	set	1087
   180  04C4                     _SYNC	set	1220
   181  04C2                     _BRGH	set	1218
   182                           
   183                           ; #config settings
   184  0000                     
   185                           	psect	cinit
   186  07FC                     start_initialization:	
   187  07FC                     __initialization:	
   188  07FC                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191  07FC                     __end_of__initialization:	
   192  07FC  0183               	clrf	3
   193  07FD  120A  118A  2E6D   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:	
   197  0070                     ?_UART_Write:	
   198  0070                     ??_UART_Write:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?___aldiv:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     UART_Write@data:	
   208                           ; 4 bytes @ 0x0
   209                           
   210  0070                     ___aldiv@divisor:	
   211                           ; 1 bytes @ 0x0
   212                           
   213                           
   214                           ; 4 bytes @ 0x0
   215  0070                     	ds	4
   216  0074                     ___aldiv@dividend:	
   217                           
   218                           ; 4 bytes @ 0x4
   219  0074                     	ds	4
   220  0078                     ??___aldiv:	
   221                           
   222                           ; 1 bytes @ 0x8
   223  0078                     	ds	1
   224  0079                     UART_Init@x:	
   225                           
   226                           ; 2 bytes @ 0x9
   227  0079                     	ds	2
   228  007B                     ??_main:	
   229                           
   230                           ; 1 bytes @ 0xB
   231  007B                     	ds	3
   232                           
   233                           	psect	cstackBANK0
   234  0020                     __pcstackBANK0:	
   235  0020                     ___aldiv@counter:	
   236                           
   237                           ; 1 bytes @ 0x0
   238  0020                     	ds	1
   239  0021                     ___aldiv@sign:	
   240                           
   241                           ; 1 bytes @ 0x1
   242  0021                     	ds	1
   243  0022                     ___aldiv@quotient:	
   244                           
   245                           ; 4 bytes @ 0x2
   246  0022                     	ds	4
   247  0026                     ?_UART_Init:	
   248  0026                     UART_Init@baudrate:	
   249                           ; 1 bytes @ 0x6
   250                           
   251                           
   252                           ; 4 bytes @ 0x6
   253  0026                     	ds	4
   254  002A                     ??_UART_Init:	
   255                           
   256                           ; 1 bytes @ 0xA
   257  002A                     	ds	12
   258                           
   259                           	psect	maintext
   260  066D                     __pmaintext:	
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 25 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, pclath, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : B00/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   280 ;;      Params:         0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0
   282 ;;      Temps:          3       0       0       0       0
   283 ;;      Totals:         3       0       0       0       0
   284 ;;Total ram usage:        3 bytes
   285 ;; Hardware stack levels required when called:    2
   286 ;; This function calls:
   287 ;;		_UART_Init
   288 ;;		_UART_Write
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           
   295                           ;psect for function _main
   296  066D                     _main:	
   297                           
   298                           ;main.c: 26:   TRISB = 0xFF;
   299                           
   300                           ;incstack = 0
   301                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   302  066D  30FF               	movlw	255
   303  066E  1683               	bsf	3,5	;RP0=1, select bank1
   304  066F  1303               	bcf	3,6	;RP1=0, select bank1
   305  0670  0086               	movwf	6	;volatile
   306                           
   307                           ;main.c: 27:   nRBPU = 0;
   308  0671  1381               	bcf	1,7	;volatile
   309                           
   310                           ;main.c: 28:   UART_Init(9600);
   311  0672  3000               	movlw	0
   312  0673  1283               	bcf	3,5	;RP0=0, select bank0
   313  0674  1303               	bcf	3,6	;RP1=0, select bank0
   314  0675  00A9               	movwf	UART_Init@baudrate+3
   315  0676  3000               	movlw	0
   316  0677  00A8               	movwf	UART_Init@baudrate+2
   317  0678  3025               	movlw	37
   318  0679  00A7               	movwf	UART_Init@baudrate+1
   319  067A  3080               	movlw	128
   320  067B  00A6               	movwf	UART_Init@baudrate
   321  067C  120A  118A  2726  120A  118A  	fcall	_UART_Init
   322  0681                     l842:	
   323                           
   324                           ;main.c: 31:   {;main.c: 32:     UART_Write(PORTB);
   325  0681  1283               	bcf	3,5	;RP0=0, select bank0
   326  0682  1303               	bcf	3,6	;RP1=0, select bank0
   327  0683  0806               	movf	6,w	;volatile
   328  0684  120A  118A  2663  120A  118A  	fcall	_UART_Write
   329                           
   330                           ;main.c: 33:     _delay((unsigned long)((100)*(8000000/4000.0)));
   331  0689  3002               	movlw	2
   332  068A  00FD               	movwf	??_main+2
   333  068B  3004               	movlw	4
   334  068C  00FC               	movwf	??_main+1
   335  068D  30BA               	movlw	186
   336  068E  00FB               	movwf	??_main
   337  068F                     u417:	
   338  068F  0BFB               	decfsz	??_main,f
   339  0690  2E8F               	goto	u417
   340  0691  0BFC               	decfsz	??_main+1,f
   341  0692  2E8F               	goto	u417
   342  0693  0BFD               	decfsz	??_main+2,f
   343  0694  2E8F               	goto	u417
   344  0695  0000               	nop
   345                           
   346                           ;main.c: 34:   }while(1);
   347  0696  2E81               	goto	l842
   348  0697                     __end_of_main:	
   349                           
   350                           	psect	text1
   351  0663                     __ptext1:	
   352 ;; *************** function _UART_Write *****************
   353 ;; Defined at:
   354 ;;		line 41 in file "./uart.h"
   355 ;; Parameters:    Size  Location     Type
   356 ;;  data            1    wreg     unsigned char 
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  data            1    0[COMMON] unsigned char 
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   368 ;;      Params:         0       0       0       0       0
   369 ;;      Locals:         1       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0
   371 ;;      Totals:         1       0       0       0       0
   372 ;;Total ram usage:        1 bytes
   373 ;; Hardware stack levels used:    1
   374 ;; This function calls:
   375 ;;		Nothing
   376 ;; This function is called by:
   377 ;;		_main
   378 ;;		_UART_Write_Text
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _UART_Write
   384  0663                     _UART_Write:	
   385                           
   386                           ;incstack = 0
   387                           ; Regs used in _UART_Write: [wreg]
   388                           ;UART_Write@data stored from wreg
   389  0663  00F0               	movwf	UART_Write@data
   390  0664                     l40:	
   391                           ;./uart.h: 41: void UART_Write(char data);./uart.h: 42: {;./uart.h: 43:   while(!TRMT);
   392                           
   393  0664  1683               	bsf	3,5	;RP0=1, select bank1
   394  0665  1303               	bcf	3,6	;RP1=0, select bank1
   395  0666  1C98               	btfss	24,1	;volatile
   396  0667  2E64               	goto	l40
   397                           
   398                           ;./uart.h: 44:   TXREG = data;
   399  0668  0870               	movf	UART_Write@data,w
   400  0669  1283               	bcf	3,5	;RP0=0, select bank0
   401  066A  1303               	bcf	3,6	;RP1=0, select bank0
   402  066B  0099               	movwf	25	;volatile
   403  066C  0008               	return
   404  066D                     __end_of_UART_Write:	
   405                           
   406                           	psect	text2
   407  0726                     __ptext2:	
   408 ;; *************** function _UART_Init *****************
   409 ;; Defined at:
   410 ;;		line 16 in file "./uart.h"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  baudrate        4    6[BANK0 ] const long 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  x               2    9[COMMON] unsigned int 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      unsigned char 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       4       0       0       0
   425 ;;      Locals:         2       0       0       0       0
   426 ;;      Temps:          0      12       0       0       0
   427 ;;      Totals:         2      16       0       0       0
   428 ;;Total ram usage:       18 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    1
   431 ;; This function calls:
   432 ;;		___aldiv
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _UART_Init
   440  0726                     _UART_Init:	
   441                           
   442                           ;./uart.h: 16: char UART_Init(const long int baudrate);./uart.h: 17: {;./uart.h: 18:   u
      +                          nsigned int x;;./uart.h: 19:   x = (8000000 - baudrate*64)/(baudrate*64);
   443                           
   444                           ;incstack = 0
   445                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   446  0726  1283               	bcf	3,5	;RP0=0, select bank0
   447  0727  1303               	bcf	3,6	;RP1=0, select bank0
   448  0728  0826               	movf	UART_Init@baudrate,w
   449  0729  00AA               	movwf	??_UART_Init
   450  072A  0827               	movf	UART_Init@baudrate+1,w
   451  072B  00AB               	movwf	??_UART_Init+1
   452  072C  0828               	movf	UART_Init@baudrate+2,w
   453  072D  00AC               	movwf	??_UART_Init+2
   454  072E  0829               	movf	UART_Init@baudrate+3,w
   455  072F  00AD               	movwf	??_UART_Init+3
   456  0730  3006               	movlw	6
   457  0731                     u335:	
   458  0731  1003               	clrc
   459  0732  0DAA               	rlf	??_UART_Init,f
   460  0733  0DAB               	rlf	??_UART_Init+1,f
   461  0734  0DAC               	rlf	??_UART_Init+2,f
   462  0735  0DAD               	rlf	??_UART_Init+3,f
   463  0736  3EFF               	addlw	-1
   464  0737  1D03               	skipz
   465  0738  2F31               	goto	u335
   466  0739  082D               	movf	??_UART_Init+3,w
   467  073A  00F3               	movwf	___aldiv@divisor+3
   468  073B  082C               	movf	??_UART_Init+2,w
   469  073C  00F2               	movwf	___aldiv@divisor+2
   470  073D  082B               	movf	??_UART_Init+1,w
   471  073E  00F1               	movwf	___aldiv@divisor+1
   472  073F  082A               	movf	??_UART_Init,w
   473  0740  00F0               	movwf	___aldiv@divisor
   474  0741  0826               	movf	UART_Init@baudrate,w
   475  0742  00AE               	movwf	??_UART_Init+4
   476  0743  0827               	movf	UART_Init@baudrate+1,w
   477  0744  00AF               	movwf	??_UART_Init+5
   478  0745  0828               	movf	UART_Init@baudrate+2,w
   479  0746  00B0               	movwf	??_UART_Init+6
   480  0747  0829               	movf	UART_Init@baudrate+3,w
   481  0748  00B1               	movwf	??_UART_Init+7
   482  0749  3006               	movlw	6
   483  074A                     u345:	
   484  074A  1003               	clrc
   485  074B  0DAE               	rlf	??_UART_Init+4,f
   486  074C  0DAF               	rlf	??_UART_Init+5,f
   487  074D  0DB0               	rlf	??_UART_Init+6,f
   488  074E  0DB1               	rlf	??_UART_Init+7,f
   489  074F  3EFF               	addlw	-1
   490  0750  1D03               	skipz
   491  0751  2F4A               	goto	u345
   492  0752  3000               	movlw	0
   493  0753  00B2               	movwf	??_UART_Init+8
   494  0754  3012               	movlw	18
   495  0755  00B3               	movwf	??_UART_Init+9
   496  0756  307A               	movlw	122
   497  0757  00B4               	movwf	??_UART_Init+10
   498  0758  3000               	movlw	0
   499  0759  00B5               	movwf	??_UART_Init+11
   500  075A  082E               	movf	??_UART_Init+4,w
   501  075B  02B2               	subwf	??_UART_Init+8,f
   502  075C  082F               	movf	??_UART_Init+5,w
   503  075D  1C03               	skipc
   504  075E  0F2F               	incfsz	??_UART_Init+5,w
   505  075F  2F61               	goto	u351
   506  0760  2F62               	goto	u352
   507  0761                     u351:	
   508  0761  02B3               	subwf	??_UART_Init+9,f
   509  0762                     u352:	
   510  0762  0830               	movf	??_UART_Init+6,w
   511  0763  1C03               	skipc
   512  0764  0F30               	incfsz	??_UART_Init+6,w
   513  0765  2F67               	goto	u353
   514  0766  2F68               	goto	u354
   515  0767                     u353:	
   516  0767  02B4               	subwf	??_UART_Init+10,f
   517  0768                     u354:	
   518  0768  0831               	movf	??_UART_Init+7,w
   519  0769  1C03               	skipc
   520  076A  0F31               	incfsz	??_UART_Init+7,w
   521  076B  2F6D               	goto	u355
   522  076C  2F6E               	goto	u356
   523  076D                     u355:	
   524  076D  02B5               	subwf	??_UART_Init+11,f
   525  076E                     u356:	
   526  076E  0835               	movf	??_UART_Init+11,w
   527  076F  00F7               	movwf	___aldiv@dividend+3
   528  0770  0834               	movf	??_UART_Init+10,w
   529  0771  00F6               	movwf	___aldiv@dividend+2
   530  0772  0833               	movf	??_UART_Init+9,w
   531  0773  00F5               	movwf	___aldiv@dividend+1
   532  0774  0832               	movf	??_UART_Init+8,w
   533  0775  00F4               	movwf	___aldiv@dividend
   534  0776  120A  118A  2697  120A  118A  	fcall	___aldiv
   535  077B  0871               	movf	?___aldiv+1,w
   536  077C  00FA               	movwf	UART_Init@x+1
   537  077D  0870               	movf	?___aldiv,w
   538  077E  00F9               	movwf	UART_Init@x
   539                           
   540                           ;./uart.h: 20:   if(x>255)
   541  077F  3001               	movlw	1
   542  0780  027A               	subwf	UART_Init@x+1,w
   543  0781  3000               	movlw	0
   544  0782  1903               	skipnz
   545  0783  0279               	subwf	UART_Init@x,w
   546  0784  1C03               	skipc
   547  0785  2FE2               	goto	l818
   548                           
   549                           ;./uart.h: 21:   {;./uart.h: 22:     x = (8000000 - baudrate*16)/(baudrate*16);
   550  0786  1283               	bcf	3,5	;RP0=0, select bank0
   551  0787  1303               	bcf	3,6	;RP1=0, select bank0
   552  0788  0826               	movf	UART_Init@baudrate,w
   553  0789  00AA               	movwf	??_UART_Init
   554  078A  0827               	movf	UART_Init@baudrate+1,w
   555  078B  00AB               	movwf	??_UART_Init+1
   556  078C  0828               	movf	UART_Init@baudrate+2,w
   557  078D  00AC               	movwf	??_UART_Init+2
   558  078E  0829               	movf	UART_Init@baudrate+3,w
   559  078F  00AD               	movwf	??_UART_Init+3
   560  0790  3004               	movlw	4
   561  0791                     u375:	
   562  0791  1003               	clrc
   563  0792  0DAA               	rlf	??_UART_Init,f
   564  0793  0DAB               	rlf	??_UART_Init+1,f
   565  0794  0DAC               	rlf	??_UART_Init+2,f
   566  0795  0DAD               	rlf	??_UART_Init+3,f
   567  0796  3EFF               	addlw	-1
   568  0797  1D03               	skipz
   569  0798  2F91               	goto	u375
   570  0799  082D               	movf	??_UART_Init+3,w
   571  079A  00F3               	movwf	___aldiv@divisor+3
   572  079B  082C               	movf	??_UART_Init+2,w
   573  079C  00F2               	movwf	___aldiv@divisor+2
   574  079D  082B               	movf	??_UART_Init+1,w
   575  079E  00F1               	movwf	___aldiv@divisor+1
   576  079F  082A               	movf	??_UART_Init,w
   577  07A0  00F0               	movwf	___aldiv@divisor
   578  07A1  0826               	movf	UART_Init@baudrate,w
   579  07A2  00AE               	movwf	??_UART_Init+4
   580  07A3  0827               	movf	UART_Init@baudrate+1,w
   581  07A4  00AF               	movwf	??_UART_Init+5
   582  07A5  0828               	movf	UART_Init@baudrate+2,w
   583  07A6  00B0               	movwf	??_UART_Init+6
   584  07A7  0829               	movf	UART_Init@baudrate+3,w
   585  07A8  00B1               	movwf	??_UART_Init+7
   586  07A9  3004               	movlw	4
   587  07AA                     u385:	
   588  07AA  1003               	clrc
   589  07AB  0DAE               	rlf	??_UART_Init+4,f
   590  07AC  0DAF               	rlf	??_UART_Init+5,f
   591  07AD  0DB0               	rlf	??_UART_Init+6,f
   592  07AE  0DB1               	rlf	??_UART_Init+7,f
   593  07AF  3EFF               	addlw	-1
   594  07B0  1D03               	skipz
   595  07B1  2FAA               	goto	u385
   596  07B2  3000               	movlw	0
   597  07B3  00B2               	movwf	??_UART_Init+8
   598  07B4  3012               	movlw	18
   599  07B5  00B3               	movwf	??_UART_Init+9
   600  07B6  307A               	movlw	122
   601  07B7  00B4               	movwf	??_UART_Init+10
   602  07B8  3000               	movlw	0
   603  07B9  00B5               	movwf	??_UART_Init+11
   604  07BA  082E               	movf	??_UART_Init+4,w
   605  07BB  02B2               	subwf	??_UART_Init+8,f
   606  07BC  082F               	movf	??_UART_Init+5,w
   607  07BD  1C03               	skipc
   608  07BE  0F2F               	incfsz	??_UART_Init+5,w
   609  07BF  2FC1               	goto	u391
   610  07C0  2FC2               	goto	u392
   611  07C1                     u391:	
   612  07C1  02B3               	subwf	??_UART_Init+9,f
   613  07C2                     u392:	
   614  07C2  0830               	movf	??_UART_Init+6,w
   615  07C3  1C03               	skipc
   616  07C4  0F30               	incfsz	??_UART_Init+6,w
   617  07C5  2FC7               	goto	u393
   618  07C6  2FC8               	goto	u394
   619  07C7                     u393:	
   620  07C7  02B4               	subwf	??_UART_Init+10,f
   621  07C8                     u394:	
   622  07C8  0831               	movf	??_UART_Init+7,w
   623  07C9  1C03               	skipc
   624  07CA  0F31               	incfsz	??_UART_Init+7,w
   625  07CB  2FCD               	goto	u395
   626  07CC  2FCE               	goto	u396
   627  07CD                     u395:	
   628  07CD  02B5               	subwf	??_UART_Init+11,f
   629  07CE                     u396:	
   630  07CE  0835               	movf	??_UART_Init+11,w
   631  07CF  00F7               	movwf	___aldiv@dividend+3
   632  07D0  0834               	movf	??_UART_Init+10,w
   633  07D1  00F6               	movwf	___aldiv@dividend+2
   634  07D2  0833               	movf	??_UART_Init+9,w
   635  07D3  00F5               	movwf	___aldiv@dividend+1
   636  07D4  0832               	movf	??_UART_Init+8,w
   637  07D5  00F4               	movwf	___aldiv@dividend
   638  07D6  120A  118A  2697  120A  118A  	fcall	___aldiv
   639  07DB  0871               	movf	?___aldiv+1,w
   640  07DC  00FA               	movwf	UART_Init@x+1
   641  07DD  0870               	movf	?___aldiv,w
   642  07DE  00F9               	movwf	UART_Init@x
   643                           
   644                           ;./uart.h: 23:     BRGH = 1;
   645  07DF  1683               	bsf	3,5	;RP0=1, select bank1
   646  07E0  1303               	bcf	3,6	;RP1=0, select bank1
   647  07E1  1518               	bsf	24,2	;volatile
   648  07E2                     l818:	
   649                           
   650                           ;./uart.h: 25:   if(x<256)
   651  07E2  3001               	movlw	1
   652  07E3  027A               	subwf	UART_Init@x+1,w
   653  07E4  3000               	movlw	0
   654  07E5  1903               	skipnz
   655  07E6  0279               	subwf	UART_Init@x,w
   656  07E7  1803               	skipnc
   657  07E8  0008               	return
   658                           
   659                           ;./uart.h: 26:   {;./uart.h: 27:     SPBRG = x;
   660  07E9  0879               	movf	UART_Init@x,w
   661  07EA  1683               	bsf	3,5	;RP0=1, select bank1
   662  07EB  1303               	bcf	3,6	;RP1=0, select bank1
   663  07EC  0099               	movwf	25	;volatile
   664                           
   665                           ;./uart.h: 28:     SYNC = 0;
   666  07ED  1218               	bcf	24,4	;volatile
   667                           
   668                           ;./uart.h: 29:     SPEN = 1;
   669  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   670  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   671  07F0  1798               	bsf	24,7	;volatile
   672                           
   673                           ;./uart.h: 30:     TRISC7 = 1;
   674  07F1  1683               	bsf	3,5	;RP0=1, select bank1
   675  07F2  1303               	bcf	3,6	;RP1=0, select bank1
   676  07F3  1787               	bsf	7,7	;volatile
   677                           
   678                           ;./uart.h: 31:     TRISC6 = 1;
   679  07F4  1707               	bsf	7,6	;volatile
   680                           
   681                           ;./uart.h: 32:     CREN = 1;
   682  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   683  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   684  07F7  1618               	bsf	24,4	;volatile
   685                           
   686                           ;./uart.h: 33:     TXEN = 1;
   687  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   688  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   689  07FA  1698               	bsf	24,5	;volatile
   690  07FB  0008               	return
   691  07FC                     __end_of_UART_Init:	
   692                           
   693                           	psect	text3
   694  0697                     __ptext3:	
   695 ;; *************** function ___aldiv *****************
   696 ;; Defined at:
   697 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  divisor         4    0[COMMON] long 
   700 ;;  dividend        4    4[COMMON] long 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  quotient        4    2[BANK0 ] long 
   703 ;;  sign            1    1[BANK0 ] unsigned char 
   704 ;;  counter         1    0[BANK0 ] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  4    0[COMMON] long 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         8       0       0       0       0
   715 ;;      Locals:         0       6       0       0       0
   716 ;;      Temps:          1       0       0       0       0
   717 ;;      Totals:         9       6       0       0       0
   718 ;;Total ram usage:       15 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_UART_Init
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           
   728                           ;psect for function ___aldiv
   729  0697                     ___aldiv:	
   730                           
   731                           ;incstack = 0
   732                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   733  0697  1283               	bcf	3,5	;RP0=0, select bank0
   734  0698  1303               	bcf	3,6	;RP1=0, select bank0
   735  0699  01A1               	clrf	___aldiv@sign
   736  069A  1FF3               	btfss	___aldiv@divisor+3,7
   737  069B  2EA9               	goto	l225
   738  069C  09F0               	comf	___aldiv@divisor,f
   739  069D  09F1               	comf	___aldiv@divisor+1,f
   740  069E  09F2               	comf	___aldiv@divisor+2,f
   741  069F  09F3               	comf	___aldiv@divisor+3,f
   742  06A0  0AF0               	incf	___aldiv@divisor,f
   743  06A1  1903               	skipnz
   744  06A2  0AF1               	incf	___aldiv@divisor+1,f
   745  06A3  1903               	skipnz
   746  06A4  0AF2               	incf	___aldiv@divisor+2,f
   747  06A5  1903               	skipnz
   748  06A6  0AF3               	incf	___aldiv@divisor+3,f
   749  06A7  01A1               	clrf	___aldiv@sign
   750  06A8  0AA1               	incf	___aldiv@sign,f
   751  06A9                     l225:	
   752  06A9  1FF7               	btfss	___aldiv@dividend+3,7
   753  06AA  2EBA               	goto	l780
   754  06AB  09F4               	comf	___aldiv@dividend,f
   755  06AC  09F5               	comf	___aldiv@dividend+1,f
   756  06AD  09F6               	comf	___aldiv@dividend+2,f
   757  06AE  09F7               	comf	___aldiv@dividend+3,f
   758  06AF  0AF4               	incf	___aldiv@dividend,f
   759  06B0  1903               	skipnz
   760  06B1  0AF5               	incf	___aldiv@dividend+1,f
   761  06B2  1903               	skipnz
   762  06B3  0AF6               	incf	___aldiv@dividend+2,f
   763  06B4  1903               	skipnz
   764  06B5  0AF7               	incf	___aldiv@dividend+3,f
   765  06B6  3001               	movlw	1
   766  06B7  00F8               	movwf	??___aldiv
   767  06B8  0878               	movf	??___aldiv,w
   768  06B9  06A1               	xorwf	___aldiv@sign,f
   769  06BA                     l780:	
   770  06BA  3000               	movlw	0
   771  06BB  00A5               	movwf	___aldiv@quotient+3
   772  06BC  3000               	movlw	0
   773  06BD  00A4               	movwf	___aldiv@quotient+2
   774  06BE  3000               	movlw	0
   775  06BF  00A3               	movwf	___aldiv@quotient+1
   776  06C0  3000               	movlw	0
   777  06C1  00A2               	movwf	___aldiv@quotient
   778  06C2  0873               	movf	___aldiv@divisor+3,w
   779  06C3  0472               	iorwf	___aldiv@divisor+2,w
   780  06C4  0471               	iorwf	___aldiv@divisor+1,w
   781  06C5  0470               	iorwf	___aldiv@divisor,w
   782  06C6  1903               	skipnz
   783  06C7  2F0F               	goto	l802
   784  06C8  01A0               	clrf	___aldiv@counter
   785  06C9  0AA0               	incf	___aldiv@counter,f
   786  06CA                     l788:	
   787  06CA  1BF3               	btfsc	___aldiv@divisor+3,7
   788  06CB  2EDA               	goto	l790
   789  06CC  3001               	movlw	1
   790  06CD  00F8               	movwf	??___aldiv
   791  06CE                     u265:	
   792  06CE  1003               	clrc
   793  06CF  0DF0               	rlf	___aldiv@divisor,f
   794  06D0  0DF1               	rlf	___aldiv@divisor+1,f
   795  06D1  0DF2               	rlf	___aldiv@divisor+2,f
   796  06D2  0DF3               	rlf	___aldiv@divisor+3,f
   797  06D3  0BF8               	decfsz	??___aldiv,f
   798  06D4  2ECE               	goto	u265
   799  06D5  3001               	movlw	1
   800  06D6  00F8               	movwf	??___aldiv
   801  06D7  0878               	movf	??___aldiv,w
   802  06D8  07A0               	addwf	___aldiv@counter,f
   803  06D9  2ECA               	goto	l788
   804  06DA                     l790:	
   805  06DA  3001               	movlw	1
   806  06DB  00F8               	movwf	??___aldiv
   807  06DC                     u285:	
   808  06DC  1003               	clrc
   809  06DD  0DA2               	rlf	___aldiv@quotient,f
   810  06DE  0DA3               	rlf	___aldiv@quotient+1,f
   811  06DF  0DA4               	rlf	___aldiv@quotient+2,f
   812  06E0  0DA5               	rlf	___aldiv@quotient+3,f
   813  06E1  0BF8               	decfsz	??___aldiv,f
   814  06E2  2EDC               	goto	u285
   815  06E3  0873               	movf	___aldiv@divisor+3,w
   816  06E4  0277               	subwf	___aldiv@dividend+3,w
   817  06E5  1D03               	skipz
   818  06E6  2EF1               	goto	u295
   819  06E7  0872               	movf	___aldiv@divisor+2,w
   820  06E8  0276               	subwf	___aldiv@dividend+2,w
   821  06E9  1D03               	skipz
   822  06EA  2EF1               	goto	u295
   823  06EB  0871               	movf	___aldiv@divisor+1,w
   824  06EC  0275               	subwf	___aldiv@dividend+1,w
   825  06ED  1D03               	skipz
   826  06EE  2EF1               	goto	u295
   827  06EF  0870               	movf	___aldiv@divisor,w
   828  06F0  0274               	subwf	___aldiv@dividend,w
   829  06F1                     u295:	
   830  06F1  1C03               	skipc
   831  06F2  2F02               	goto	l798
   832  06F3  0870               	movf	___aldiv@divisor,w
   833  06F4  02F4               	subwf	___aldiv@dividend,f
   834  06F5  0871               	movf	___aldiv@divisor+1,w
   835  06F6  1C03               	skipc
   836  06F7  0F71               	incfsz	___aldiv@divisor+1,w
   837  06F8  02F5               	subwf	___aldiv@dividend+1,f
   838  06F9  0872               	movf	___aldiv@divisor+2,w
   839  06FA  1C03               	skipc
   840  06FB  0F72               	incfsz	___aldiv@divisor+2,w
   841  06FC  02F6               	subwf	___aldiv@dividend+2,f
   842  06FD  0873               	movf	___aldiv@divisor+3,w
   843  06FE  1C03               	skipc
   844  06FF  0F73               	incfsz	___aldiv@divisor+3,w
   845  0700  02F7               	subwf	___aldiv@dividend+3,f
   846  0701  1422               	bsf	___aldiv@quotient,0
   847  0702                     l798:	
   848  0702  3001               	movlw	1
   849  0703                     u305:	
   850  0703  1003               	clrc
   851  0704  0CF3               	rrf	___aldiv@divisor+3,f
   852  0705  0CF2               	rrf	___aldiv@divisor+2,f
   853  0706  0CF1               	rrf	___aldiv@divisor+1,f
   854  0707  0CF0               	rrf	___aldiv@divisor,f
   855  0708  3EFF               	addlw	-1
   856  0709  1D03               	skipz
   857  070A  2F03               	goto	u305
   858  070B  3001               	movlw	1
   859  070C  02A0               	subwf	___aldiv@counter,f
   860  070D  1D03               	btfss	3,2
   861  070E  2EDA               	goto	l790
   862  070F                     l802:	
   863  070F  0821               	movf	___aldiv@sign,w
   864  0710  1903               	btfsc	3,2
   865  0711  2F1D               	goto	l806
   866  0712  09A2               	comf	___aldiv@quotient,f
   867  0713  09A3               	comf	___aldiv@quotient+1,f
   868  0714  09A4               	comf	___aldiv@quotient+2,f
   869  0715  09A5               	comf	___aldiv@quotient+3,f
   870  0716  0AA2               	incf	___aldiv@quotient,f
   871  0717  1903               	skipnz
   872  0718  0AA3               	incf	___aldiv@quotient+1,f
   873  0719  1903               	skipnz
   874  071A  0AA4               	incf	___aldiv@quotient+2,f
   875  071B  1903               	skipnz
   876  071C  0AA5               	incf	___aldiv@quotient+3,f
   877  071D                     l806:	
   878  071D  0825               	movf	___aldiv@quotient+3,w
   879  071E  00F3               	movwf	?___aldiv+3
   880  071F  0824               	movf	___aldiv@quotient+2,w
   881  0720  00F2               	movwf	?___aldiv+2
   882  0721  0823               	movf	___aldiv@quotient+1,w
   883  0722  00F1               	movwf	?___aldiv+1
   884  0723  0822               	movf	___aldiv@quotient,w
   885  0724  00F0               	movwf	?___aldiv
   886  0725  0008               	return
   887  0726                     __end_of___aldiv:	
   888  007E                     btemp	set	126	;btemp
   889  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     851
                                             11 COMMON     3     3      0
                          _UART_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jun 16 18:53:54 2019

            __CFG_CP$OFF 0000                       l40 0664                      l225 06A9  
                    l802 070F                      l806 071D                      l818 07E2  
                    l842 0681                      l780 06BA                      l790 06DA  
                    l788 06CA                      l798 0702                      u305 0703  
                    u351 0761                      u335 0731                      u352 0762  
                    u265 06CE                      u353 0767                      u345 074A  
                    u417 068F                      u354 0768             __CFG_CPD$OFF 0000  
                    u355 076D                      u356 076E                      u285 06DC  
                    u295 06F1                      u391 07C1                      u375 0791  
                    u392 07C2                      u393 07C7                      u385 07AA  
                    u394 07C8                      u395 07CD                      u396 07CE  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _BRGH 04C2  
                   _CREN 00C4                     _RCIF 0065                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
           __CFG_WRT$OFF 0000                     _main 066D                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000          __end_of___aldiv 0726  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019                    _nRBPU 040F              ?_UART_Write 0070  
     __size_of_UART_Init 00D6                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0697                   ??_main 007B  
                 _TRISC6 043E                   _TRISC7 043F           __CFG_PWRTE$OFF 0000  
      __end_of_UART_Init 07FC      __size_of_UART_Write 000A                ??___aldiv 0078  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 066D  
           ??_UART_Write 0070                  ___aldiv 0697       __end_of_UART_Write 066D  
                __ptext1 0663                  __ptext2 0726                  __ptext3 0697  
       ___aldiv@dividend 0074     end_of_initialization 07FC         ___aldiv@quotient 0022  
              _UART_Init 0726           UART_Write@data 0070               ?_UART_Init 0026  
    start_initialization 07FC                ___latbits 0002            __pcstackBANK0 0020  
               ?___aldiv 0070              ??_UART_Init 002A               UART_Init@x 0079  
        ___aldiv@divisor 0070          ___aldiv@counter 0020        UART_Init@baudrate 0026  
       __size_of___aldiv 008F            __size_of_main 002A             ___aldiv@sign 0021  
             _UART_Write 0663  
