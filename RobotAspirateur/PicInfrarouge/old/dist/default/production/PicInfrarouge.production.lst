

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 15 12:59:33 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	10F222
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	dabs	1,0x1C,4
     8  0000                     
     9                           ; Version 2.05
    10                           ; Generated 20/12/2018 GMT
    11                           ; 
    12                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution.
    26                           ; 
    27                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    28                           ;        software without specific prior written permission.
    29                           ; 
    30                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    31                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    32                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    33                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    34                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    35                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    36                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    37                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    38                           ; 
    39                           ; 
    40                           ; Code-generator required, PIC10F222 Definitions
    41                           ; 
    42                           ; SFR Addresses
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0006                     _GPIObits	set	6
    53  0006                     _TRIS	set	6
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  001                     start_initialization:	
    59  001                     __initialization:	
    60  001                     end_of_initialization:	
    61                           ;End of C runtime variable initialization code
    62                           
    63  001                     __end_of__initialization:	
    64  001  064                	clrf	4
    65  002  B7F                	ljmp	_main	;jump to C main() function
    66                           
    67                           	psect	cstackBANK0
    68  009                     __pcstackBANK0:	
    69  009                     ??_main:	
    70  009                     ?_main:	
    71                           ; 1 bytes @ 0x0
    72                           
    73                           
    74                           ; 2 bytes @ 0x0
    75  009                     	ds	3
    76  00C                     main@i:	
    77                           
    78                           ; 2 bytes @ 0x3
    79  00C                     	ds	2
    80  00E                     main@capteur1:	
    81                           
    82                           ; 1 bytes @ 0x5
    83  00E                     	ds	1
    84  00F                     main@capteur2:	
    85                           
    86                           ; 1 bytes @ 0x6
    87  00F                     	ds	1
    88  010                     main@capteur3:	
    89                           
    90                           ; 1 bytes @ 0x7
    91  010                     	ds	1
    92  011                     main@count:	
    93                           
    94                           ; 2 bytes @ 0x8
    95  011                     	ds	2
    96                           
    97                           	psect	maintext
    98  17F                     __pmaintext:	
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 19 in file "main.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;  count           2    8[BANK0 ] int 
   109 ;;  i               2    3[BANK0 ] int 
   110 ;;  capteur3        1    7[BANK0 ] unsigned char 
   111 ;;  capteur2        1    6[BANK0 ] unsigned char 
   112 ;;  capteur1        1    5[BANK0 ] unsigned char 
   113 ;; Return value:  Size  Location     Type
   114 ;;                  2   10[None  ] int 
   115 ;; Registers used:
   116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3
   117 ;; Tracked objects:
   118 ;;		On entry : B00/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMMON   BANK0
   122 ;;      Params:         0       0
   123 ;;      Locals:         0       7
   124 ;;      Temps:          0       3
   125 ;;      Totals:         0      10
   126 ;;Total ram usage:       10 bytes
   127 ;; This function calls:
   128 ;;		Nothing
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           
   135                           ;psect for function _main
   136  17F                     _main:	
   137                           
   138                           ;main.c: 21:   TRIS = 0x0E;
   139                           
   140                           ;incstack = 0
   141                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3]
   142  17F  C0E                	movlw	14
   143  180  006                	tris	6
   144                           
   145                           ;main.c: 25:   GPIObits.GP0 = 0;
   146  181  406                	bcf	6,0	;volatile
   147  182  206                	movf	6,w	;volatile
   148  183  206                	movf	6,w	;volatile
   149  184  206                	movf	6,w	;volatile
   150  185                     l592:	
   151                           
   152                           ;main.c: 32:   {;main.c: 33:     count =0;
   153  185  071                	clrf	main@count
   154  186  072                	clrf	main@count+1
   155                           
   156                           ;main.c: 34:     _delay((unsigned long)((200)*(8000000/4000.0)));
   157  187  C03                	movlw	3
   158  188  02B                	movwf	??_main+2
   159  189  C08                	movlw	8
   160  18A  02A                	movwf	??_main+1
   161  18B  C77                	movlw	119
   162  18C  029                	movwf	??_main
   163  18D                     u97:	
   164  18D  2E9                	decfsz	??_main,f
   165  18E  B8D                	goto	u97
   166  18F  2EA                	decfsz	??_main+1,f
   167  190  B8D                	goto	u97
   168  191  2EB                	decfsz	??_main+2,f
   169  192  B8D                	goto	u97
   170                           
   171                           ;main.c: 35:     capteur1 = GPIObits.GP1;
   172  193  C00                	movlw	0
   173  194  626                	btfsc	6,1	;volatile
   174  195  C01                	movlw	1
   175  196  02E                	movwf	main@capteur1
   176                           
   177                           ;main.c: 36:     capteur2 = GPIObits.GP2;
   178  197  C00                	movlw	0
   179  198  646                	btfsc	6,2	;volatile
   180  199  C01                	movlw	1
   181  19A  02F                	movwf	main@capteur2
   182                           
   183                           ;main.c: 37:     capteur3 = GPIObits.GP3;
   184  19B  C00                	movlw	0
   185  19C  666                	btfsc	6,3	;volatile
   186  19D  C01                	movlw	1
   187  19E  030                	movwf	main@capteur3
   188                           
   189                           ;main.c: 42:     if (capteur1 == 1)
   190  19F  0CE                	decf	main@capteur1,w
   191  1A0  743                	btfss	3,2
   192  1A1  BAB                	goto	l606
   193                           
   194                           ;main.c: 43:         count ++;
   195  1A2  C01                	movlw	1
   196  1A3  03C                	movwf	28
   197  1A4  07D                	clrf	29
   198  1A5  21C                	movf	28,w
   199  1A6  1F1                	addwf	main@count,f
   200  1A7  603                	skipnc
   201  1A8  2B2                	incf	main@count+1,f
   202  1A9  21D                	movf	29,w
   203  1AA  1F2                	addwf	main@count+1,f
   204  1AB                     l606:	
   205                           
   206                           ;main.c: 45:     if (capteur2 == 1)
   207  1AB  0CF                	decf	main@capteur2,w
   208  1AC  743                	btfss	3,2
   209  1AD  BB7                	goto	l610
   210                           
   211                           ;main.c: 46:         count ++;
   212  1AE  C01                	movlw	1
   213  1AF  03C                	movwf	28
   214  1B0  07D                	clrf	29
   215  1B1  21C                	movf	28,w
   216  1B2  1F1                	addwf	main@count,f
   217  1B3  603                	skipnc
   218  1B4  2B2                	incf	main@count+1,f
   219  1B5  21D                	movf	29,w
   220  1B6  1F2                	addwf	main@count+1,f
   221  1B7                     l610:	
   222                           
   223                           ;main.c: 48:     if (capteur3 == 1)
   224  1B7  0D0                	decf	main@capteur3,w
   225  1B8  743                	btfss	3,2
   226  1B9  BC3                	goto	l614
   227                           
   228                           ;main.c: 49:         count ++;
   229  1BA  C01                	movlw	1
   230  1BB  03C                	movwf	28
   231  1BC  07D                	clrf	29
   232  1BD  21C                	movf	28,w
   233  1BE  1F1                	addwf	main@count,f
   234  1BF  603                	skipnc
   235  1C0  2B2                	incf	main@count+1,f
   236  1C1  21D                	movf	29,w
   237  1C2  1F2                	addwf	main@count+1,f
   238  1C3                     l614:	
   239                           
   240                           ;main.c: 52:     for (i=0; i < count; i++)
   241  1C3  06C                	clrf	main@i
   242  1C4  06D                	clrf	main@i+1
   243  1C5                     l624:	
   244  1C5  212                	movf	main@count+1,w
   245  1C6  03D                	movwf	29
   246  1C7  211                	movf	main@count,w
   247  1C8  03C                	movwf	28
   248  1C9  20D                	movf	main@i+1,w
   249  1CA  03F                	movwf	31
   250  1CB  20C                	movf	main@i,w
   251  1CC  03E                	movwf	30
   252  1CD  21F                	movf	31,w
   253  1CE  F80                	xorlw	128
   254  1CF  029                	movwf	??_main
   255  1D0  21D                	movf	29,w
   256  1D1  F80                	xorlw	128
   257  1D2  089                	subwf	??_main,w
   258  1D3  743                	skipz
   259  1D4  BD7                	goto	u85
   260  1D5  21C                	movf	28,w
   261  1D6  09E                	subwf	30,w
   262  1D7                     u85:	
   263  1D7  603                	btfsc	3,0
   264  1D8  B85                	goto	l592
   265                           
   266                           ;main.c: 53:     {;main.c: 54:         GPIObits.GP0 = 1;
   267  1D9  506                	bsf	6,0	;volatile
   268                           
   269                           ;main.c: 55:         _delay((unsigned long)((100)*(8000000/4000.0)));
   270  1DA  C02                	movlw	2
   271  1DB  02B                	movwf	??_main+2
   272  1DC  C04                	movlw	4
   273  1DD  02A                	movwf	??_main+1
   274  1DE  CBA                	movlw	186
   275  1DF  029                	movwf	??_main
   276  1E0                     u107:	
   277  1E0  2E9                	decfsz	??_main,f
   278  1E1  BE0                	goto	u107
   279  1E2  2EA                	decfsz	??_main+1,f
   280  1E3  BE0                	goto	u107
   281  1E4  2EB                	decfsz	??_main+2,f
   282  1E5  BE0                	goto	u107
   283  1E6  000                	nop
   284                           
   285                           ;main.c: 56:         GPIObits.GP0 = 0;
   286  1E7  406                	bcf	6,0	;volatile
   287                           
   288                           ;main.c: 57:         _delay((unsigned long)((100)*(8000000/4000.0)));
   289  1E8  C02                	movlw	2
   290  1E9  02B                	movwf	??_main+2
   291  1EA  C04                	movlw	4
   292  1EB  02A                	movwf	??_main+1
   293  1EC  CBA                	movlw	186
   294  1ED  029                	movwf	??_main
   295  1EE                     u117:	
   296  1EE  2E9                	decfsz	??_main,f
   297  1EF  BEE                	goto	u117
   298  1F0  2EA                	decfsz	??_main+1,f
   299  1F1  BEE                	goto	u117
   300  1F2  2EB                	decfsz	??_main+2,f
   301  1F3  BEE                	goto	u117
   302  1F4  000                	nop
   303                           
   304                           ;main.c: 58:     }
   305  1F5  C01                	movlw	1
   306  1F6  03C                	movwf	28
   307  1F7  07D                	clrf	29
   308  1F8  21C                	movf	28,w
   309  1F9  1EC                	addwf	main@i,f
   310  1FA  603                	skipnc
   311  1FB  2AD                	incf	main@i+1,f
   312  1FC  21D                	movf	29,w
   313  1FD  1ED                	addwf	main@i+1,f
   314  1FE  BC5                	goto	l624
   315  1FF                     __end_of_main:	
   316  001C                     btemp	set	28	;btemp
   317  001C                     wtemp0	set	28
   318  001E                     wtemp1	set	30
   319  001C                     ttemp0	set	28
   320  001C                     ltemp0	set	28


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            21     10      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     124
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               15      A       A       3       47.6%
ABS                  0      0       0       4        0.0%
BITBANK0            15      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 15 12:59:33 2019

            __CFG_CP$OFF 0000                       u85 01D7                       u97 018D  
                     fsr 0004                      l610 01B7                      l614 01C3  
                    l606 01AB                      l624 01C5                      l592 0185  
                    u107 01E0                      u117 01EE                     _TRIS 0006  
                   _main 017F                     btemp 001C                     start 0000  
          __CFG_MCPU$OFF 0000             main@capteur1 000E             main@capteur2 000F  
           main@capteur3 0010                    ?_main 0009            __CFG_WDTE$OFF 0000  
                  main@i 000C                    ltemp0 001C                    ttemp0 001C  
                  status 0003                    wtemp0 001C                    wtemp1 001E  
         __CFG_MCLRE$OFF 0000          __initialization 0001             __end_of_main 01FF  
                 ??_main 0009  __end_of__initialization 0001               __pmaintext 017F  
   end_of_initialization 0001      start_initialization 0001         __CFG_IOSCFS$8MHZ 0000  
              ___latbits 0000            __pcstackBANK0 0009                 _GPIObits 0006  
              main@count 0011            __size_of_main 0080  
